<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.job.dashboard.domain.personal.PersonalDashMapper">

    <select id="profileCountByUserNo" parameterType="int" resultType="int">
        SELECT /* PersonalDashMapper.profileCountByUserNo */
            count(*)
        AS profileCount
        FROM user_profile_info
        WHERE USER_NO = #{userNo}
    </select>

    <select id="getProfileInfo" parameterType="int" resultType="com.job.dashboard.domain.dto.UserInfoDTO">
        SELECT /* PersonalDashMapper.getProfileInfo */
            ui.email,
            ui.user_type_code,
            func_get_detail_name('user_type', ui.user_type_code) AS user_type_code_name,
            ui.login_type_code,
            up.NAME,
            up.PHONE,
            up.BIRTH,
            up.GENDER,
            up.ZIPCODE,
            up.ADDRESS,
            up.ADDRESS_DETAIL,
            up.PART_TIME_EXPERIENCE,
            up.LONGITUDE,
            up.LATITUDE
        FROM
            user_info ui
                LEFT JOIN USER_PROFILE_INFO up ON ui.USER_NO = up.USER_NO
        WHERE ui.USER_NO = #{userNo}
    </select>

    <select id="profileInfoList" parameterType="int" resultType="com.job.dashboard.domain.dto.UserInfoDTO">
        SELECT /* PersonalDashMapper.profileInfoList */
            upi.PROFILE_ID,
            upi.USER_NO,
            (SELECT fi.file_id FROM file_info fi WHERE USER_NO = fi.user_no LIMIT 1)AS fileId,
            upi.NAME,
            upi.PHONE,
            upi.BIRTH,
            upi.GENDER,
            upi.ZIPCODE,
            upi.ADDRESS,
            upi.ADDRESS_DETAIL,
            upi.LONGITUDE,
            upi.LATITUDE,
            upi.PART_TIME_EXPERIENCE,
            upi.SYSTEM_REGISTER_ID,
            upi.SYSTEM_REGISTER_DATETIME,
            upi.SYSTEM_UPDATER_ID,
            upi.SYSTEM_UPDATE_DATETIME
        FROM USER_PROFILE_INFO upi
        WHERE USER_NO = #{userNo}
    </select>

    <select id="getProfileIdSeq" parameterType="int" resultType="int">
        SELECT /* PersonalDashMapper.getProfileIdSeq */
            COALESCE(MAX(PROFILE_ID) + 1, 1) as profile_id_seq
        FROM USER_PROFILE_INFO
    </select>

    <insert id="insertProfile" parameterType="com.job.dashboard.domain.dto.UserInfoDTO" >
        INSERT INTO /* PersonalDashMapper.insertProfile */
        USER_PROFILE_INFO
            (
             PROFILE_ID,
             USER_NO,
             NAME,
             PHONE,
             BIRTH,
             GENDER,
             ZIPCODE,
             ADDRESS,
             ADDRESS_DETAIL,
             longitude,
             latitude,
             PART_TIME_EXPERIENCE,
             SYSTEM_REGISTER_DATETIME,
             SYSTEM_REGISTER_ID,
             SYSTEM_UPDATE_DATETIME,
             SYSTEM_UPDATER_ID
             ) VALUES (
                       #{profileId},
                       #{userNo},
                       #{name},
                       #{phone},
                       #{birth},
                       #{gender},
                       #{zipcode},
                       #{address},
                       #{addressDetail},
                       #{longitude},
                       #{latitude},
                       #{partTimeExperience},
                       #{systemRegisterDatetime},
                       #{userNo},
                       #{systemUpdateDatetime},
                       #{userNo}
                       ) ON DUPLICATE KEY UPDATE
            NAME                   = #{name},
            PHONE                  = #{phone},
            BIRTH                  = #{birth},
            GENDER                 = #{gender},
            ZIPCODE                = #{zipcode},
            ADDRESS                = #{address},
            ADDRESS_DETAIL         = #{addressDetail},
            longitude              = #{longitude},
            latitude               = #{latitude},
            PART_TIME_EXPERIENCE   = #{partTimeExperience},
            SYSTEM_UPDATE_DATETIME = #{systemUpdateDatetime},
            SYSTEM_UPDATER_ID      = #{userNo}
    </insert>

    <select id="getOldPassword" parameterType="int" resultType="com.job.dashboard.domain.dto.UserDTO">
        SELECT /* PersonalDashMapper.getOldPassword */
            password
        FROM user_info
        WHERE USER_NO = #{userNo}
    </select>

    <update id="updatePassword" parameterType="com.job.dashboard.domain.dto.UserDTO">
        UPDATE /* PersonalDashMapper.updatePassword */
            user_info
        SET
            PASSWORD = #{password},
            SYSTEM_UPDATER_ID = #{userNo},
            SYSTEM_UPDATE_DATETIME = now()
        WHERE
            USER_NO = #{userNo}
    </update>

    <select id="applyStatusList" parameterType="map" resultType="com.job.dashboard.domain.dto.JobApplicationDTO">
        SELECT /* PersonalDashMapper.applyList */
            jai.application_id,
            jai.job_id,
            jai.USER_NO,
            (
                CASE
                    WHEN jpi.status_type_code = 'CLOSED' THEN jpi.status_type_code
                    WHEN jpi.status_type_code = 'OPEN' THEN jai.status_type_code
                    ELSE jai.status_type_code
                    END
                ) AS status_type_code,
            (
                CASE
                    WHEN jpi.status_type_code = 'CLOSED' THEN func_get_detail_name('status_type', jpi.status_type_code)
                    WHEN jpi.status_type_code = 'OPEN' THEN func_get_detail_name('status_type', jai.status_type_code)
                    ELSE func_get_detail_name('status_type', jai.status_type_code)
                    END
                ) AS status_type_code_name,
            DATE_FORMAT(jai.system_register_datetime, '%Y-%m-%d') AS system_register_datetime,
            jpi.title,
            jpi.zipcode,
            jpi.address,
            jpi.address_detail,
            jpi.salary
        FROM
            job_application_info jai
                INNER JOIN job_post_info jpi ON jai.job_id = jpi.job_id
        WHERE jai.USER_NO = #{userNo}
          AND jpi.title LIKE CONCAT('%', '', '%')
        ORDER BY jai.system_register_datetime DESC
    </select>


    <update id="applyListCancel" parameterType="int">
        /* PersonalDashMapper.applyListCancel*/
        UPDATE job_application_info
        SET
            STATUS_TYPE_CODE = '지원취소'
        WHERE
            APPLICATION_ID = #{applicationId}
    </update>

    <select id="getDashboardList" parameterType="map" resultType="com.job.dashboard.domain.dto.JobApplicationDTO">
        SELECT /* PersonalDashMapper.getDashboardList*/
            jpi.user_no,
            (SELECT fi.file_id FROM file_info fi WHERE fi.user_no = jpi.user_no ORDER BY fi.file_id DESC limit 1) as file_id,
            jpi.title,
            jpi.job_type_code,
            func_get_detail_name('job_type', jpi.job_type_code) AS job_type_code_name,
            jpi.address,
            jpi.address_detail,
            jpi.salary,
            jpi.salary_type_code,
            func_get_detail_name('salary_type', jpi.salary_type_code) AS salary_type_code_name,
            jpi.salary,
            jpi.job_time,
            jpi.status_type_code,
            func_get_detail_name('status_type', jpi.status_type_code) AS status_type_code_name,
            jai.application_id,
            jai.job_id,
            DATE_FORMAT(jai.system_register_datetime, '%Y-%m-%d') AS system_register_datetime
        FROM job_application_info jai
        INNER JOIN job_post_info jpi ON jai.job_id = jpi.job_id
        WHERE jai.USER_NO = #{userNo}
        AND jpi.title LIKE CONCAT('%', #{keyword}, '%')
        ORDER BY jai.system_register_datetime DESC
    </select>

    <select id="getLikeJobsList" parameterType="map" resultType="com.job.dashboard.domain.dto.JobPostDTO">
        SELECT /* PersonalDashMapper.getLikeJobsList*/
            jpi.job_id,
            jpi.user_no,
            (SELECT fi.file_id FROM file_info fi WHERE fi.user_no = jpi.user_no ORDER BY fi.file_id DESC limit 1) as file_id,
            jpi.title,
            jpi.job_type_code,
            func_get_detail_name('job_type', jpi.job_type_code) AS job_type_code_name,
            jpi.address,
            jpi.address_detail,
            jpi.salary,
            jpi.salary_type_code,
            func_get_detail_name('salary_type', jpi.salary_type_code) AS salary_type_code_name,
            jpi.salary,
            jpi.job_time,
            jpi.status_type_code,
            func_get_detail_name('status_type', jpi.status_type_code) AS status_type_code_name,
            DATE_FORMAT(jpi.system_register_datetime, '%Y-%m-%d') AS system_register_datetime
        FROM
            job_post_info jpi
            JOIN
            job_like_info jli  ON  jpi.job_id = jli.job_id
        WHERE
            jli.user_no = #{userNo}
        AND jpi.title LIKE CONCAT('%', #{keyword}, '%')
        ORDER BY jpi.system_register_datetime DESC
    </select>

    <select id="getCountJobs" resultType="int">
        SELECT /* PersonalDashMapper.getCountJobs*/
            COUNT(*) FROM job_post_info
    </select>
</mapper>
