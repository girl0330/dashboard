<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.job.dashboard.domain.personal.PersonalDashMapper">

    <select id="profileCountByUserNo" parameterType="int" resultType="int">
        SELECT /* PersonalDashMapper.profileCountByUserNo */
            count(*)
        AS profileCount
        FROM user_profile_info
        WHERE USER_NO = #{userNo}
    </select>

    <select id="getProfileInfo" parameterType="int" resultType="com.job.dashboard.domain.dto.UserInfoDTO">
        SELECT /* PersonalDashMapper.getProfileInfo */
            ui.email,
            ui.user_type_code,
            ui.login_type_code,
            up.name,
            up.phone,
            up.birth,
            up.gender,
            up.zipcode,
            up.address,
            up.address_detail,
            up.part_time_experience,
            up.longitude,
            up.latitude
        FROM
            user_info ui
                LEFT JOIN user_profile_info up ON ui.user_no = up.user_no
        WHERE ui.user_no = #{userNo}
    </select>

    <select id="profileInfoList" parameterType="int" resultType="com.job.dashboard.domain.dto.UserInfoDTO">
        SELECT /* PersonalDashMapper.profileInfoList */
            upi.profile_id,
            upi.user_no,
            (SELECT fi.file_id FROM file_info fi WHERE user_no = fi.user_no LIMIT 1)AS fileId,
            upi.name,
            upi.phone,
            upi.birth,
            upi.gender,
            upi.zipcode,
            upi.address,
            upi.address_detail,
            upi.longitude,
            upi.latitude,
            upi.part_time_experience,
            upi.system_register_id,
            upi.system_register_datetime,
            upi.system_updater_id,
            upi.system_update_datetime
        FROM user_profile_info upi
        WHERE user_no = #{userNo}
    </select>

    <select id="getProfileIdSeq" parameterType="int" resultType="int">
        SELECT /* PersonalDashMapper.getProfileIdSeq */
            COALESCE(MAX(PROFILE_ID) + 1, 1) as profile_id_seq
        FROM user_profile_info
    </select>

    <insert id="insertProfile" parameterType="com.job.dashboard.domain.dto.UserInfoDTO" >
        INSERT INTO /* PersonalDashMapper.insertProfile */
        user_profile_info
            (
             profile_id,
             user_no,
             name,
             phone,
             birth,
             gender,
             zipcode,
             address,
             address_detail,
             longitude,
             latitude,
             part_time_experience,
             system_register_datetime,
             system_register_id,
             system_update_datetime,
             system_updater_id
             ) VALUES (
                       #{profileId},
                       #{userNo},
                       #{name},
                       #{phone},
                       #{birth},
                       #{gender},
                       #{zipcode},
                       #{address},
                       #{addressDetail},
                       #{longitude},
                       #{latitude},
                       #{partTimeExperience},
                       #{systemRegisterDatetime},
                       #{userNo},
                       #{systemUpdateDatetime},
                       #{userNo}
                       ) ON DUPLICATE KEY UPDATE
            NAME                   = #{name},
            phone                  = #{phone},
            birth                  = #{birth},
            gender                 = #{gender},
            zipcode                = #{zipcode},
            address                = #{address},
            address_detail         = #{addressDetail},
            longitude              = #{longitude},
            latitude               = #{latitude},
            part_time_experience   = #{partTimeExperience},
            system_update_datetime = #{systemUpdateDatetime},
            system_updater_id      = #{userNo}
    </insert>

    <select id="getOldPassword" parameterType="int" resultType="com.job.dashboard.domain.dto.UserDTO">
        SELECT /* PersonalDashMapper.getOldPassword */
            password
        FROM user_info
        WHERE USER_NO = #{userNo}
    </select>

    <update id="updatePassword" parameterType="com.job.dashboard.domain.dto.UserDTO">
        UPDATE /* PersonalDashMapper.updatePassword */
            user_info
        SET
            PASSWORD = #{password},
            SYSTEM_UPDATER_ID = #{userNo},
            SYSTEM_UPDATE_DATETIME = now()
        WHERE
            USER_NO = #{userNo}
    </update>

    <select id="applyStatusList" parameterType="map" resultType="com.job.dashboard.domain.dto.JobApplicationDTO">
        SELECT /* PersonalDashMapper.applyList */
            jai.application_id,
            jai.job_id,
            jai.USER_NO,
            (
                CASE
                    WHEN jpi.status_type_code = 'CLOSED' THEN jpi.status_type_code
                    WHEN jpi.status_type_code = 'OPEN' THEN jai.status_type_code
                    ELSE jai.status_type_code
                    END
                ) AS status_type_code2,
            (
                CASE
                    WHEN jpi.status_type_code = 'CLOSED' THEN func_get_detail_name('status_type', jpi.status_type_code)
                    WHEN jpi.status_type_code = 'OPEN' THEN func_get_detail_name('status_type', jai.status_type_code)
                    ELSE func_get_detail_name('status_type', jai.status_type_code)
                    END
                ) AS status_type_code_name2,
            DATE_FORMAT(jai.system_register_datetime, '%Y-%m-%d') AS system_register_datetime,
            jpi.title,
            jpi.zipcode,
            jpi.address,
            jpi.address_detail,
            jpi.salary,
            jpi.status_type_code AS status_type_code,
            func_get_detail_name('status_type', jpi.status_type_code) AS status_type_code_name
        FROM
            job_application_info jai
                INNER JOIN job_post_info jpi ON jai.job_id = jpi.job_id
        WHERE jai.USER_NO = #{userNo}
          AND jpi.title LIKE CONCAT('%', '', '%')
        ORDER BY jai.system_register_datetime DESC
    </select>


    <update id="applyListCancel" parameterType="int">
        /* PersonalDashMapper.applyListCancel*/
        UPDATE job_application_info
        SET
            STATUS_TYPE_CODE = '지원취소'
        WHERE
            APPLICATION_ID = #{applicationId}
    </update>

    <select id="getLikeJobsList" parameterType="map" resultType="com.job.dashboard.domain.dto.JobPostDTO">
        SELECT /* PersonalDashMapper.getLikeJobsList*/
            jpi.job_id,
            jpi.user_no,
            (SELECT fi.file_id FROM file_info fi WHERE fi.user_no = jpi.user_no ORDER BY fi.file_id DESC limit 1) as file_id,
            jpi.title,
            jpi.job_type_code,
            func_get_detail_name('job_type', jpi.job_type_code) AS job_type_code_name,
            jpi.address,
            jpi.address_detail,
            jpi.salary,
            jpi.salary_type_code,
            func_get_detail_name('salary_type', jpi.salary_type_code) AS salary_type_code_name,
            jpi.salary,
            jpi.job_time,
            jpi.status_type_code,
            func_get_detail_name('status_type', jpi.status_type_code) AS status_type_code_name,
            DATE_FORMAT(jpi.system_register_datetime, '%Y-%m-%d') AS system_register_datetime
        FROM
            job_post_info jpi
            JOIN
            job_like_info jli  ON  jpi.job_id = jli.job_id
        WHERE
            jli.user_no = #{userNo}
        AND jpi.title LIKE CONCAT('%', #{keyword}, '%')
        ORDER BY jli.system_register_datetime DESC
    </select>

    <select id="getCountJobs" resultType="int">
        SELECT /* PersonalDashMapper.getCountJobs*/
            COUNT(*) FROM job_post_info
    </select>
</mapper>
