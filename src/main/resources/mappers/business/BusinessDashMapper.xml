<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.job.dashboard.domain.business.BusinessDashMapper">
    <select id="checkBusinessProfile" parameterType="int" resultType="com.job.dashboard.domain.dto.CompanyInfoDTO">
        /* BusinessDashMapper.checkBusinessProfile */
        SELECT COMPANY_ID,
               USER_NO,
               COMPANY_NAME,
               COMPANY_DESCRIPTION,
               zipcode,
               ADDRESS,
               address_detail,
               longitude,
               latitude,
               INDUSTRY_CODE,
               BUSINESS_TYPE_CODE,
               BUSINESS_NUMBER,
               OFFICE_PHONE,
               SYSTEM_REGISTER_ID,
               SYSTEM_UPDATER_ID
        FROM COMPANY_INFO
        WHERE USER_NO = #{userNo}
    </select>

    <select id="getCompanyIdSeq" parameterType="int" resultType="int">
        /* BusinessDashMapper.getCompanyIdSeq */
        SELECT COALESCE(MAX(COMPANY_ID) + 1, 1) as company_id_seq
        FROM COMPANY_INFO
    </select>

    <insert id="saveBusinessProfile" parameterType="com.job.dashboard.domain.dto.CompanyInfoDTO" >
        /* BusinessDashMapper.saveBusinessProfile */
        INSERT INTO company_info
        (COMPANY_ID,
         USER_NO,
         COMPANY_NAME,
         COMPANY_DESCRIPTION,
         zipcode,
         address,
         address_detail,
         longitude,
         latitude,
         INDUSTRY_CODE,
         BUSINESS_TYPE_CODE,
         BUSINESS_NUMBER,
         OFFICE_PHONE,
         SYSTEM_REGISTER_ID,
         SYSTEM_UPDATER_ID
        ) VALUES (
                     #{companyId},
                     #{userNo},
                     #{companyName},
                     #{companyDescription},
                     #{zipcode},
                     #{address},
                     #{addressDetail},
                     #{longitude},
                     #{longitude},
                     #{industryCode},
                     #{businessTypeCode},
                     #{businessNumber},
                     #{officePhone},
                     #{userNo},
                     #{userNo}
                 ) ON DUPLICATE KEY UPDATE
            USER_NO             = #{userNo},
            COMPANY_NAME        = #{companyName},
            COMPANY_DESCRIPTION = #{companyDescription},
            zipcode             = #{zipcode},
            address             = #{address},
            address_detail      = #{addressDetail},
            longitude           = #{longitude},
            latitude            = #{latitude},
            INDUSTRY_CODE       = #{industryCode},
            BUSINESS_TYPE_CODE  = #{businessTypeCode},
            BUSINESS_NUMBER     = #{businessNumber},
            OFFICE_PHONE        = #{officePhone},
            SYSTEM_UPDATER_ID   = #{userNo}
    </insert>

    <select id="getBusinessProfile" parameterType="int" resultType="com.job.dashboard.domain.dto.CompanyInfoDTO">
        /* BusinessDashMapper.getBusinessProfile */
        SELECT COMPANY_ID,
               USER_NO,
               COMPANY_NAME,
               COMPANY_DESCRIPTION,
               ZIPCODE,
               ADDRESS,
               ADDRESS_DETAIL,
               LONGITUDE,
               LATITUDE,
               INDUSTRY_CODE,
               BUSINESS_TYPE_CODE,
               BUSINESS_NUMBER,
               OFFICE_PHONE,
               SYSTEM_REGISTER_ID,
               SYSTEM_UPDATER_ID
        FROM COMPANY_INFO
        WHERE USER_NO = #{userNo}
    </select>

    <select id="getOldPassword" parameterType="int" resultType="com.job.dashboard.domain.dto.CompanyInfoDTO">
        /* BusinessDashMapper.getOldPassword */
        SELECT password
        FROM user_info
        WHERE USER_NO = #{userNo}
    </select>

    <select id="getPostJobList" parameterType="map" resultType="com.job.dashboard.domain.dto.JobPostDTO">
        SELECT  /* BusinessDashMapper.getPostJobList */
            jpi.job_id,
            jpi.title,
            jpi.job_type_code,
            (SELECT detail_name FROM code_detail WHERE group_code = 'job_type' AND detail_code = jpi.job_type_code) AS job_type_code_name,
            jpi.address,
            jpi.salary_type_code,
            (SELECT detail_name FROM code_detail WHERE group_code = 'salary_type' AND detail_code = jpi.salary_type_code) AS salary_type_code_name,
            jpi.salary,
            jpi.job_time,
            jpi.job_day_type_code,
            (SELECT detail_name FROM code_detail WHERE group_code = 'job_day_type' AND detail_code = jpi.job_day_type_code) AS job_day_type_code_name,
            jpi.number_of_staff,
            jpi.employment_type_code,
            (SELECT detail_name FROM code_detail WHERE group_code = 'employment_type' AND detail_code = jpi.employment_type_code) AS employment_type_code_name,
            jpi.system_register_id,
            jpi.system_updater_id,
            DATE_FORMAT(jpi.system_register_datetime, '%Y-%m-%d') AS system_register_datetime,
            jpi.status_type_code,
            (SELECT detail_name FROM code_detail WHERE group_code = 'status_type' AND detail_code = jpi.status_type_code) AS status_type_code_name,
            (SELECT COUNT(*) FROM job_application_info jai WHERE jai.job_id = jpi.job_id) AS countApplication
        FROM
            job_post_info jpi
        WHERE jpi.USER_NO = #{userNo}
          AND jpi.title LIKE CONCAT('%', #{keyword}, '%')
        ORDER BY jpi.system_register_datetime DESC
    </select>

    <select id="getCandidateList" parameterType="map" resultType="com.job.dashboard.domain.dto.JobApplicationDTO">
        SELECT /* BusinessDashMapper.getApplicants */
            jai.application_id,
            jai.job_id,
            jai.USER_NO,
            jai.status_type_code,
            (SELECT detail_name FROM code_detail WHERE group_code = 'status_type' AND detail_code = jai.status_type_code) AS status_type_code_name,
            DATE_FORMAT(jai.system_register_datetime, '%Y-%m-%d') AS system_register_datetime,
            jai.motivation_description,
            jpi.title,
            upi.NAME, -- 이름
            upi.phone, -- 핸드폰
            upi.gender, -- 성별
            FLOOR(DATEDIFF(CURDATE(), upi.birth) / 365.25) AS old -- 나이
        FROM
            job_application_info jai
                INNER JOIN job_post_info jpi ON jai.job_id = jpi.job_id
        INNER JOIN user_profile_info upi ON jai.USER_NO = upi.USER_NO
        WHERE jpi.USER_NO = #{userNo}
          AND jai.Job_ID = #{jobId}
          AND jpi.title LIKE CONCAT('%', #{keyword}, '%')
        ORDER BY jpi.system_register_datetime DESC
    </select>

    <select id="getApplicantsInfo" resultType="com.job.dashboard.domain.dto.JobApplicationDTO" parameterType="int">
        SELECT /* BusinessDashMapper.getApplicantsInfo */
            jai.*
        FROM job_application_info jai
        WHERE jpi.job_id = #{jobId}
          AND jai.user_no = #{userNo}
    </select>

    <select id="getCandidateApplyDetail" parameterType="int" resultType="com.job.dashboard.domain.dto.JobApplicationDTO">
        SELECT /* BusinessDashMapper.getApplicantsInfo */
            jai.JOB_ID,
            jai.USER_NO,
            jai.MOTIVATION_DESCRIPTION,
            jai.SYSTEM_REGISTER_DATETIME,
            jai.status_type_code,
            (SELECT detail_name FROM code_detail WHERE group_code = 'status_type' AND detail_code = jai.status_type_code) AS status_type_code_name,
            upi.NAME,
            upi.PHONE,
            upi.BIRTH,
            upi.GENDER,
            FLOOR(DATEDIFF(CURDATE(), upi.birth) / 365.25) AS old -- 나이
        FROM
            job_application_info jai
                INNER JOIN user_profile_info upi ON
                jai.USER_NO = upi.USER_NO
        WHERE
            jai.USER_NO = #{userNo}
          AND jai.job_id = #{jobId}
    </select>

    <update id="applyCandidate" parameterType="com.job.dashboard.domain.dto.JobApplicationDTO">
        UPDATE  /* BusinessDashMapper.getApplicantsInfo */
            job_application_info
        SET status_type_code = 'HIRED'
        WHERE USER_NO = #{userNo}
          AND job_id = #{jobId}
--             ON DUPLICATE KEY UPDATE
--             status_type_code = 'APPLIED'
    </update>

    <update id="applyCancelCandidate" parameterType="com.job.dashboard.domain.dto.JobApplicationDTO">
        UPDATE /* BusinessDashMapper.getApplicantsInfo */
            job_application_info
        SET status_type_code = 'APPLIED'
        WHERE USER_NO = #{userNo}
          AND job_id = #{jobId}
    </update>

    <insert id="saveImage" parameterType="com.job.dashboard.domain.dto.FileDTO" useGeneratedKeys="true" keyProperty="fileId">
        INSERT INTO  /* BusinessDashMapper.getApplicantsInfo */
            file_info (
                        user_no,
                        original_filename,
                        saved_filename,
                        file_path,
                        file_type,
                        file_size,
                        system_register_id,
                        system_register_datetime
        )
        VALUES (
                #{userNo},
                #{originalFilename},
                #{savedFilename},
                #{filePath},
                #{fileType},
                #{fileSize},
                #{userNo},
                now()
               )
    </insert>

    <select id="getFiles" parameterType="map" resultType="com.job.dashboard.domain.dto.FileDTO">
        SELECT /* BusinessDashMapper.getFiles */
            file_id,
            user_no,
            original_filename,
            saved_filename,
            file_path,
            file_type,
            file_size,
            system_register_id,
            system_register_datetime
        FROM file_info
        WHERE
        1 = 1
        <if test="fileId != null">
            AND file_id = #{fileId}
        </if>
        <if test="userNo != null">
            AND user_no = #{userNo}
        </if>
        ORDER BY file_id DESC LIMIT 1
    </select>
</mapper>