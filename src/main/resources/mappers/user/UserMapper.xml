<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.job.dashboard.domain.user.UserMapper">
    <select id="getEmailCount" parameterType="com.job.dashboard.domain.dto.UserDTO" resultType="int">
        SELECT /*UserMapper.getEmailCount*/
            count(*) AS countemail
        FROM user_info
        WHERE email = #{email}
    </select>

    <insert id="insertUser" parameterType="com.job.dashboard.domain.dto.UserDTO">
        INSERT INTO      /*UserMapper.insertUser*/ user_info
        (
            email,
            password ,
            user_type_code,
            system_register_id,
            system_register_datetime,
            system_updater_id,
            system_update_datetime,
            login_type_code
        )  VALUES (
            #{email},
            #{password},
            #{userTypeCode},
            #{userNo},
            now(),
            #{userNo},
            now(),
            #{loginTypeCode}
                    )
    </insert>

    <select id="getHashedPassword" parameterType="com.job.dashboard.domain.dto.UserDTO" resultType="java.lang.String">
        SELECT /*UserMapper.getHashedPassword*/
              password
        FROM user_info
        WHERE email = #{email}
    </select>

    <select id="getUserTypeCode" parameterType="com.job.dashboard.domain.dto.UserDTO" resultType="java.lang.String">
        SELECT /*UserMapper.getUserTypeCode*/
              user_type_code
        FROM user_info
        WHERE email = #{email}
    </select>

    <select id="getLoginUserInfo" parameterType="com.job.dashboard.domain.dto.UserDTO" resultType="com.job.dashboard.domain.dto.UserDTO">
        SELECT /*UserMapper.getLoginUserInfo*/
              user_no,
              email,
              password,
              user_type_code,
              system_register_id,
              system_register_datetime,
              system_updater_id,
              system_update_datetime
        FROM user_info
        WHERE email = #{email}
          AND password = #{password}
    </select>

    <select id="getCheckEmail" parameterType="com.job.dashboard.domain.dto.UserDTO" resultType="int">
        SELECT /*UserMapper.getCheckEmail*/
            count(*) AS countemail
        FROM user_info
        WHERE email = #{email}
    </select>

    <select id="getCheckIdentity" parameterType="com.job.dashboard.domain.dto.UserProfileInfoDTO" resultType="int">
        SELECT /*UserMapper.getCheckIdentity*/
            count(*) AS countIdentity
        FROM user_info ui
                 INNER JOIN user_profile_info upi ON ui.user_no = upi.user_no
        WHERE ui.email = #{email}
          AND upi.name = #{name}
          AND upi.phone = #{phone}
    </select>

    <select id="updatePassword" parameterType="com.job.dashboard.domain.dto.UserDTO">
        UPDATE /* UserMapper.updatePassword */
            user_info
        SET
            PASSWORD = #{password},
            SYSTEM_UPDATE_DATETIME = now()
        WHERE
            email = #{email}
    </select>

    <select id="getTermsTypeCode" resultType="com.job.dashboard.domain.dto.TermsInfoDTO">
        SELECT
            term_id,
            terms_type_code,
            func_get_detail_name('terms_type', terms_type_code) AS terms_type_name,
            terms_content,
            version,
            system_register_id,
            system_register_datetime,
            system_update_id,
            system_update_datetime
        FROM
            terms_info
        where terms_type_code = #{termsTypeCode} ORDER BY system_register_datetime DESC LIMIT 1
    </select>

</mapper>

